GOALS
- Totally standalone compiler
- generate own bytecode with basic block/ssa/code flow analysis
- bytecode executer
- multithreaded

TODO:
- In Token struct vove Str to `int32 start, end;` and const char *base to Tokens struct. It will save 1/3 of Token struct
- Redo FILL_ERROR to take index of token explicitly


Before lexer slimming
mosk@DM-LAPTOP:~/src/lang/compiler6/compiler$ ./build.sh
+ rm -f compiler
+ clang++ -nodefaultlibs -g -O0 src/all.cpp -o compiler -lc

real    0m0.128s
user    0m0.099s
sys     0m0.017s
+ ./compiler
Memory: 0x12345789000
files cap = 1024
readFile took 0.000037sec
file size = 611
tokenize took 0.000050sec
memory usage 11984
debugPrintTokens took 0.000240sec
parsing took 0.000279sec
memory usage 17160
ASTFile_ id=0 (1:1) abs/lexer_test.lan
  ASTProc_ id=1 (1:1) printf foreign function
    arg [0] 'fmt' (1:17) ASTPointerTo_ id=3 (1:21)
      ASTIdentifier_ id=4 (1:22) i8
    arg [...] C variadic
    ret [0] ASTIdentifier_ id=5 (1:31) i32
  ASTProc_ id=6 (4:1) main
    arg [0] 'argc' (4:16) ASTIdentifier_ id=8 (4:21) i32
    arg [1] 'argv' (4:26) ASTPointerTo_ id=10 (4:31)
      ASTPointerTo_ id=11 (4:32)
        ASTIdentifier_ id=12 (4:33) i8
    ret [0] ASTIdentifier_ id=13 (4:37) i32
    body ASTBlock_ id=14 (4:41)
      statement [0] ASTVariableDefinition_ id=15 (5:3)
        var [0] ASTVariable_ id=16 (5:7) 'i'
          type ASTIdentifier_ id=19 (5:13) i32
          initExpr NULL
        var [1] ASTVariable_ id=17 (5:9) 'j'
          type ASTIdentifier_ id=19 (5:13) i32
          initExpr NULL
        var [2] ASTVariable_ id=18 (5:11) 'k'
          type ASTIdentifier_ id=19 (5:13) i32
          initExpr NULL
      statement [1] ASTVariableDefinition_ id=20 (6:3)
        var [0] ASTVariable_ id=21 (6:7) 'n'
          type ASTIdentifier_ id=22 (6:9) i32
          initExpr ASTLiteral_ id=23 (6:15) number '0'
      statement [2] ASTVariableDefinition_ id=24 (7:3)
        var [0] ASTVariable_ id=25 (7:7) 'a'
          type ASTIdentifier_ id=28 (7:15) f64
          initExpr ASTLiteral_ id=29 (7:21) number '1.1'
        var [1] ASTVariable_ id=26 (7:10) 'b'
          type ASTIdentifier_ id=28 (7:15) f64
          initExpr ASTLiteral_ id=30 (7:26) number '0.0'
        var [2] ASTVariable_ id=27 (7:13) 'c'
          type ASTIdentifier_ id=28 (7:15) f64
          initExpr ASTLiteral_ id=31 (7:31) number '3.14'
      statement [3] ASTVariableDefinition_ id=32 (8:3)
        var [0] ASTVariable_ id=33 (8:7) 'x'
          type ASTIdentifier_ id=34 (8:9) f64
          initExpr ASTLiteral_ id=35 (8:16) number '0'
      statement [4] ASTVariableDefinition_ id=36 (9:3)
        var [0] ASTVariable_ id=37 (9:7) 'y'
          type ASTIdentifier_ id=38 (9:9) f64
          initExpr ASTBinaryOp_ id=40 (9:17) '+'
            ASTLiteral_ id=39 (9:15) number '1'
            ASTLiteral_ id=41 (9:19) number '2'
      statement [5] ASTVariableDefinition_ id=42 (10:3)
        var [0] ASTVariable_ id=43 (10:7) 'z'
          type ASTIdentifier_ id=44 (10:9) f64
          initExpr ASTBinaryOp_ id=48 (10:21) '+'
            ASTBinaryOp_ id=46 (10:17) '+'
              ASTLiteral_ id=45 (10:15) number '3'
              ASTLiteral_ id=47 (10:19) number '4'
            ASTLiteral_ id=49 (10:23) number '5'
      statement [6] ASTVariableDefinition_ id=50 (11:3)
        var [0] ASTVariable_ id=51 (11:7) 'z1'
          type ASTIdentifier_ id=52 (11:10) f64
          initExpr ASTBinaryOp_ id=54 (11:18) '+'
            ASTLiteral_ id=53 (11:16) number '3'
            ASTBinaryOp_ id=56 (11:22) '*'
              ASTLiteral_ id=55 (11:20) number '4'
              ASTLiteral_ id=57 (11:24) number '5'
      statement [7] ASTVariableDefinition_ id=58 (12:3)
        var [0] ASTVariable_ id=59 (12:7) 'z2'
          type ASTIdentifier_ id=60 (12:10) f64
          initExpr ASTBinaryOp_ id=64 (12:24) '*'
            ASTBinaryOp_ id=62 (12:19) '+' ()
              ASTLiteral_ id=61 (12:17) number '3'
              ASTLiteral_ id=63 (12:21) number '4'
            ASTLiteral_ id=65 (12:26) number '5'
      statement [8] ASTVariableDefinition_ id=66 (13:3)
        var [0] ASTVariable_ id=67 (13:7) 'z3'
          type ASTIdentifier_ id=68 (13:10) f64
          initExpr ASTBinaryOp_ id=76 (13:23) '/'
            ASTBinaryOp_ id=74 (13:21) '/'
              ASTBinaryOp_ id=72 (13:19) '/'
                ASTBinaryOp_ id=70 (13:17) '/'
                  ASTLiteral_ id=69 (13:16) number '1'
                  ASTLiteral_ id=71 (13:18) number '2'
                ASTLiteral_ id=73 (13:20) number '3'
              ASTLiteral_ id=75 (13:22) number '4'
            ASTLiteral_ id=77 (13:24) number '5'
      statement [9] ASTVariableDefinition_ id=78 (14:3)
        var [0] ASTVariable_ id=79 (14:7) 'z4'
          type ASTIdentifier_ id=80 (14:10) f64
          initExpr ASTBinaryOp_ id=90 (14:27) '/'
            ASTBinaryOp_ id=86 (14:21) '/'
              ASTBinaryOp_ id=84 (14:19) '/'
                ASTBinaryOp_ id=82 (14:17) '/'
                  ASTLiteral_ id=81 (14:16) number '1'
                  ASTLiteral_ id=83 (14:18) number '2'
                ASTLiteral_ id=85 (14:20) number '3'
              ASTBinaryOp_ id=88 (14:24) '+' ()
                ASTLiteral_ id=87 (14:23) number '4'
                ASTLiteral_ id=89 (14:25) number '6'
            ASTLiteral_ id=91 (14:28) number '5'
debugPrintAST took 0.000654sec

real    0m0.017s
user    0m0.000s
sys     0m0.017s

After lexer slimming
mosk@DM-LAPTOP:~/src/lang/compiler6/compiler$ ./build.sh
+ rm -f compiler
+ clang++ -nodefaultlibs -g -O0 src/all.cpp -o compiler -lc

real    0m0.111s
user    0m0.090s
sys     0m0.010s
+ ./compiler
Memory: 0x12345789000
files cap = 1024
readFile took 0.000025sec
file size = 611
tokenize took 0.000042sec
memory usage 8392
debugPrintTokens took 0.000124sec
parsing took 0.000148sec
memory usage 13568
ASTFile_ id=0 (1:1) abs/lexer_test.lan
  ASTProc_ id=1 (1:1) printf foreign function
    arg [0] 'fmt' (1:17) ASTPointerTo_ id=3 (1:21)
      ASTIdentifier_ id=4 (1:22) i8
    arg [...] C variadic
    ret [0] ASTIdentifier_ id=5 (1:31) i32
  ASTProc_ id=6 (4:1) main
    arg [0] 'argc' (4:16) ASTIdentifier_ id=8 (4:21) i32
    arg [1] 'argv' (4:26) ASTPointerTo_ id=10 (4:31)
      ASTPointerTo_ id=11 (4:32)
        ASTIdentifier_ id=12 (4:33) i8
    ret [0] ASTIdentifier_ id=13 (4:37) i32
    body ASTBlock_ id=14 (4:41)
      statement [0] ASTVariableDefinition_ id=15 (5:3)
        var [0] ASTVariable_ id=16 (5:7) 'i'
          type ASTIdentifier_ id=19 (5:13) i32
          initExpr NULL
        var [1] ASTVariable_ id=17 (5:9) 'j'
          type ASTIdentifier_ id=19 (5:13) i32
          initExpr NULL
        var [2] ASTVariable_ id=18 (5:11) 'k'
          type ASTIdentifier_ id=19 (5:13) i32
          initExpr NULL
      statement [1] ASTVariableDefinition_ id=20 (6:3)
        var [0] ASTVariable_ id=21 (6:7) 'n'
          type ASTIdentifier_ id=22 (6:9) i32
          initExpr ASTLiteral_ id=23 (6:15) number '0'
      statement [2] ASTVariableDefinition_ id=24 (7:3)
        var [0] ASTVariable_ id=25 (7:7) 'a'
          type ASTIdentifier_ id=28 (7:15) f64
          initExpr ASTLiteral_ id=29 (7:21) number '1.1'
        var [1] ASTVariable_ id=26 (7:10) 'b'
          type ASTIdentifier_ id=28 (7:15) f64
          initExpr ASTLiteral_ id=30 (7:26) number '0.0'
        var [2] ASTVariable_ id=27 (7:13) 'c'
          type ASTIdentifier_ id=28 (7:15) f64
          initExpr ASTLiteral_ id=31 (7:31) number '3.14'
      statement [3] ASTVariableDefinition_ id=32 (8:3)
        var [0] ASTVariable_ id=33 (8:7) 'x'
          type ASTIdentifier_ id=34 (8:9) f64
          initExpr ASTLiteral_ id=35 (8:16) number '0'
      statement [4] ASTVariableDefinition_ id=36 (9:3)
        var [0] ASTVariable_ id=37 (9:7) 'y'
          type ASTIdentifier_ id=38 (9:9) f64
          initExpr ASTBinaryOp_ id=40 (9:17) '+'
            ASTLiteral_ id=39 (9:15) number '1'
            ASTLiteral_ id=41 (9:19) number '2'
      statement [5] ASTVariableDefinition_ id=42 (10:3)
        var [0] ASTVariable_ id=43 (10:7) 'z'
          type ASTIdentifier_ id=44 (10:9) f64
          initExpr ASTBinaryOp_ id=48 (10:21) '+'
            ASTBinaryOp_ id=46 (10:17) '+'
              ASTLiteral_ id=45 (10:15) number '3'
              ASTLiteral_ id=47 (10:19) number '4'
            ASTLiteral_ id=49 (10:23) number '5'
      statement [6] ASTVariableDefinition_ id=50 (11:3)
        var [0] ASTVariable_ id=51 (11:7) 'z1'
          type ASTIdentifier_ id=52 (11:10) f64
          initExpr ASTBinaryOp_ id=54 (11:18) '+'
            ASTLiteral_ id=53 (11:16) number '3'
            ASTBinaryOp_ id=56 (11:22) '*'
              ASTLiteral_ id=55 (11:20) number '4'
              ASTLiteral_ id=57 (11:24) number '5'
      statement [7] ASTVariableDefinition_ id=58 (12:3)
        var [0] ASTVariable_ id=59 (12:7) 'z2'
          type ASTIdentifier_ id=60 (12:10) f64
          initExpr ASTBinaryOp_ id=64 (12:24) '*'
            ASTBinaryOp_ id=62 (12:19) '+' ()
              ASTLiteral_ id=61 (12:17) number '3'
              ASTLiteral_ id=63 (12:21) number '4'
            ASTLiteral_ id=65 (12:26) number '5'
      statement [8] ASTVariableDefinition_ id=66 (13:3)
        var [0] ASTVariable_ id=67 (13:7) 'z3'
          type ASTIdentifier_ id=68 (13:10) f64
          initExpr ASTBinaryOp_ id=76 (13:23) '/'
            ASTBinaryOp_ id=74 (13:21) '/'
              ASTBinaryOp_ id=72 (13:19) '/'
                ASTBinaryOp_ id=70 (13:17) '/'
                  ASTLiteral_ id=69 (13:16) number '1'
                  ASTLiteral_ id=71 (13:18) number '2'
                ASTLiteral_ id=73 (13:20) number '3'
              ASTLiteral_ id=75 (13:22) number '4'
            ASTLiteral_ id=77 (13:24) number '5'
      statement [9] ASTVariableDefinition_ id=78 (14:3)
        var [0] ASTVariable_ id=79 (14:7) 'z4'
          type ASTIdentifier_ id=80 (14:10) f64
          initExpr ASTBinaryOp_ id=90 (14:27) '/'
            ASTBinaryOp_ id=86 (14:21) '/'
              ASTBinaryOp_ id=84 (14:19) '/'
                ASTBinaryOp_ id=82 (14:17) '/'
                  ASTLiteral_ id=81 (14:16) number '1'
                  ASTLiteral_ id=83 (14:18) number '2'
                ASTLiteral_ id=85 (14:20) number '3'
              ASTBinaryOp_ id=88 (14:24) '+' ()
                ASTLiteral_ id=87 (14:23) number '4'
                ASTLiteral_ id=89 (14:25) number '6'
            ASTLiteral_ id=91 (14:28) number '5'
debugPrintAST took 0.000218sec

real    0m0.009s
user    0m0.000s
sys     0m0.009s

